using System.Text;
using Microsoft.VisualStudio.TestPlatform.CoreUtilities.Extensions;
using Robotc.Lib;

namespace Robotc.Test;

public class IntegrationTests
{
    [Fact]
    void EndToEndTest()
    {
        var commands = new StringBuilder()
            .AppendLine("PLACE 3,3,SOUTH")
            .AppendLine("MOVE")
            .AppendLine("REPORT")
            .AppendLine("LEFT")
            .AppendLine("MOVE")
            .AppendLine("REPORT")
            .AppendLine("RIGHT")
            .AppendLine("MOVE")
            .AppendLine("REPORT")
            .AppendLine("EXIT");

        var expected = new StringBuilder()
            .AppendLine("3,2,SOUTH")
            .AppendLine("4,2,EAST")
            .AppendLine("4,1,SOUTH");  


        var reader = new StringReader(commands.ToString());
        var writer = new StringWriter();

        using var app = new App([], reader, writer);
        
        app.Run();

        Assert.Equal(expected.ToString(), writer.ToString());

    }

    [Fact]
    void EndToEndTestWithInvalidInputs()
    {
        var commands = new StringBuilder()
            .AppendLine(@"FN67yjgjb1\BSk0txTsVh/vjngfhKT7RkQ53d3f3y6QEFl2gGGmQVsqXzojSDFC%lRmMNcnRyuzwPkA*xCSyo41bqiHxhyMgxsuzkp#uE@m3Mc4NWqK2x0DC2kaay8g5jhuvGwHqSHNMM&KwCcnt7hpPNfLXe5g)E998BjkioI8c2V3t52YHmTGMZDD9hyFVrCN8pVZ3mKuXTcV^hYkNKbdzXfxZUsmCQZyv4M3UzxVKuzpVsw4Lc(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")
            .AppendLine("PLACE 874348645213889465198784134768,413874631897864176444984155976413644810,SOUTH")
            .AppendLine("PLACE 3,3,SOUTH")
            .AppendLine("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")
            .AppendLine("MOVE")
            .AppendLine("MOVE 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")
            .AppendLine("REPORT");

        var expected = new StringBuilder()
            .AppendLine("3,1,SOUTH");  


        var reader = new StringReader(commands.ToString());
        var writer = new StringWriter();

        using var app = new App([], reader, writer);
        
        app.Run();

        Assert.Equal(expected.ToString(), writer.ToString());

    }
}